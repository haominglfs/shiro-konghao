<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation=" 
	  http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd	  
	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd	   
	  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd	   
	  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd	   
	  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd	   
	  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />  
		<property name="username" value="${jdbc.username}" />  
		<property name="password" value="${jdbc.password}" />  
		   
		<property name="filters" value="stat" />  
	   
		<property name="maxActive" value="${jdbc.maxPoolSize}" />  
		<property name="initialSize" value="${jdbc.initialPoolSize}" />  
		<property name="maxWait" value="60000" />  
		<property name="minIdle" value="${jdbc.minPoolSize}" />  
	   
		<property name="timeBetweenEvictionRunsMillis" value="60000" />  
		<property name="minEvictableIdleTimeMillis" value="300000" />  
	   
		<property name="validationQuery" value="SELECT 'x'" />  
		<property name="testWhileIdle" value="true" />  
		<property name="testOnBorrow" value="false" />  
		<property name="testOnReturn" value="false" />  
		   
		<property name="poolPreparedStatements" value="true" />  
		<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />  
	</bean> 

<!-- 	<bean id="pageConfig" class="cn.com.cibtc.framework.dao.mybaties.PaginationInterceptor">
		<property name="executorProvider">
			<bean id="executorProvider" class="cn.com.cibtc.framework.dao.mybaties.impl.SimpleExecutorProvider">
				<property name="pattern" value="^.*page.*$"></property>
			</bean>
		</property>
	</bean> -->


	<bean name="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:/mybatis/dynamic-config-mapper.xml</value>
				<value>classpath*:/mybatis/mapper/**/*.xml</value>
			</list>
		</property>

<!-- 		<property name="plugins">
			<list>
				<ref bean="pageConfig" />
			</list>
		</property> -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
				  value="cn.com.qxl.shiro.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
	</bean>

	<!-- Transaction Configuration -->
	<bean id="matchAllTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="query*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<idref local="matchAllTxInterceptor" />
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Transaction Configuration -->

</beans>
